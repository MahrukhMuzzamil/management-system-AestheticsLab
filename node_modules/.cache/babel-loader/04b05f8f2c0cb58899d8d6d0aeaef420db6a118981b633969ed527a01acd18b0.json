{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Miss Mahrukh\\\\Desktop\\\\ticket-system\\\\src\\\\components\\\\charts\\\\priority-chart.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst labels = ['Low', 'Medium', 'High'];\nconst barPercentage = '0.5';\nconst backgroundColor = ['lightgreen', 'moccasin', 'crimson'];\nconst options = {\n  legend: {\n    display: false\n  },\n  maintainAspectRatio: false,\n  responsive: false,\n  scales: {\n    yAxes: [{\n      ticks: {\n        beginAtZero: true\n      }\n    }]\n  }\n};\nexport default class PriorityChart extends Component {\n  constructor(props) {\n    super(props);\n    this.low = 0;\n    this.medium = 0;\n    this.high = 0;\n    this.state = {\n      tickets: [],\n      data: {\n        labels: labels,\n        datasets: [{\n          data: [0, 0, 0],\n          barPercentage: barPercentage,\n          backgroundColor: backgroundColor\n        }]\n      }\n    };\n  }\n  componentDidMount() {\n    axios.get('http://localhost:5000/tickets/').then(res => {\n      this.setState({\n        tickets: res.data\n      });\n      this.state.tickets.forEach(ticket => {\n        // Update counts based on priority\n        if (ticket.status !== 'Resolved') {\n          switch (ticket.priority) {\n            case 'Low':\n              this.low++;\n              break;\n            case 'Medium':\n              this.medium++;\n              break;\n            case 'High':\n              this.high++;\n              break;\n            default:\n              console.warn(`Unknown priority: ${ticket.priority}`);\n          }\n        }\n      });\n\n      // Update the chart data state\n      this.setState({\n        data: {\n          datasets: [{\n            data: [this.low, this.medium, this.high]\n          }]\n        }\n      });\n    }).catch(error => console.log(error));\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: this.state.data,\n        options: options,\n        height: 350,\n        width: 500\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","axios","Bar","jsxDEV","_jsxDEV","labels","barPercentage","backgroundColor","options","legend","display","maintainAspectRatio","responsive","scales","yAxes","ticks","beginAtZero","PriorityChart","constructor","props","low","medium","high","state","tickets","data","datasets","componentDidMount","get","then","res","setState","forEach","ticket","status","priority","console","warn","catch","error","log","render","children","height","width","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Miss Mahrukh/Desktop/ticket-system/src/components/charts/priority-chart.component.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nconst labels = ['Low', 'Medium', 'High'];\r\nconst barPercentage = '0.5';\r\nconst backgroundColor = ['lightgreen', 'moccasin', 'crimson'];\r\nconst options = {\r\n    legend: { display: false },\r\n    maintainAspectRatio: false,\r\n    responsive: false,\r\n    scales: {\r\n        yAxes: [\r\n            {\r\n                ticks: {\r\n                    beginAtZero: true,\r\n                },\r\n            },\r\n        ],\r\n    },\r\n};\r\n\r\nexport default class PriorityChart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.low = 0;\r\n        this.medium = 0;\r\n        this.high = 0;\r\n\r\n        this.state = {\r\n            tickets: [],\r\n            data: {\r\n                labels: labels,\r\n                datasets: [\r\n                    {\r\n                        data: [0, 0, 0],\r\n                        barPercentage: barPercentage,\r\n                        backgroundColor: backgroundColor,\r\n                    },\r\n                ],\r\n            },\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios\r\n            .get('http://localhost:5000/tickets/')\r\n            .then((res) => {\r\n                this.setState({ tickets: res.data });\r\n                this.state.tickets.forEach((ticket) => {\r\n                    // Update counts based on priority\r\n                    if (ticket.status !== 'Resolved') {\r\n                        switch (ticket.priority) {\r\n                            case 'Low':\r\n                                this.low++;\r\n                                break;\r\n                            case 'Medium':\r\n                                this.medium++;\r\n                                break;\r\n                            case 'High':\r\n                                this.high++;\r\n                                break;\r\n                            default:\r\n                                console.warn(`Unknown priority: ${ticket.priority}`);\r\n                        }\r\n                    }\r\n                });\r\n\r\n                // Update the chart data state\r\n                this.setState({\r\n                    data: {\r\n                        datasets: [\r\n                            {\r\n                                data: [this.low, this.medium, this.high],\r\n                            },\r\n                        ],\r\n                    },\r\n                });\r\n            })\r\n            .catch((error) => console.log(error));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Bar\r\n                    data={this.state.data}\r\n                    options={options}\r\n                    height={350}\r\n                    width={500}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}